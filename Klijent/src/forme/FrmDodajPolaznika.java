/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Instruktor;
import domen.Kurs;
import domen.Polaznik;
import domen.Upis;
import java.awt.Color;
import java.io.IOException;

import java.text.SimpleDateFormat;

import java.util.Date;
import java.util.LinkedList;
import java.util.List;

import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import komunikacija.Komunikacija;
import konstante.Konstante;
import logika.Kontroler;
import modeli.ModelTabeleKursevi;
import modeli.ModelTabeleKursevi2;
import transfer.KlijentskiZahtev;
import transfer.ServerskiOdgovor;

/**
 *
 * @author Milica
 */
public class FrmDodajPolaznika extends javax.swing.JFrame {
    
    FrmGlavna glavna;
    Polaznik p;
    ModelTabeleKursevi2 mtk2;

    /**
     * Creates new form FrmDodajPolaznika
     */
    public FrmDodajPolaznika() {
        initComponents();
    }

public FrmDodajPolaznika(java.awt.Frame parent, boolean modal) {
        super();
        glavna = (FrmGlavna) parent;
        initComponents();
        setLocationRelativeTo(null);
        mtk2 = new ModelTabeleKursevi2();
        tabelaKursevi.setModel(mtk2);
        popuniCB();
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnDodaj = new javax.swing.JButton();
        btnOdustani = new javax.swing.JButton();
        txtIme = new javax.swing.JTextField();
        txtPrezime = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtBrTelefona = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cbKurs = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaKursevi = new javax.swing.JTable();
        txtDatumRodj = new com.toedter.calendar.JCalendar();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Unos novog polaznika");

        jLabel3.setText("Ime:");

        jLabel4.setText("Prezime:");

        jLabel5.setText("Email:");

        jLabel6.setText("Broj telefona:");

        jLabel7.setText("Datum roÄ‘enja:");

        btnDodaj.setText("Dodaj");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnOdustani.setText("Odustani");
        btnOdustani.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOdustaniActionPerformed(evt);
            }
        });

        txtPrezime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrezimeActionPerformed(evt);
            }
        });

        txtBrTelefona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBrTelefonaActionPerformed(evt);
            }
        });

        jLabel2.setText("Kurs:");

        cbKurs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbKursActionPerformed(evt);
            }
        });

        tabelaKursevi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tabelaKursevi);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6)
                            .addComponent(jLabel2))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtPrezime, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                                .addComponent(txtEmail)
                                .addComponent(txtIme)
                                .addComponent(txtBrTelefona))
                            .addComponent(cbKurs, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(txtDatumRodj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addGap(54, 54, 54))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(164, 164, 164)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnOdustani))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(163, 163, 163))
            .addGroup(layout.createSequentialGroup()
                .addGap(177, 177, 177)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(txtDatumRodj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtBrTelefona, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cbKurs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(33, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnDodaj)
                                .addGap(18, 18, 18)
                                .addComponent(btnOdustani)
                                .addGap(62, 62, 62))))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

     private void btnGenerisibtnGroupMouseEntered(java.awt.event.MouseEvent evt) {                                                 
       
    }                                                

    private void btnGenerisibtnGroupMouseExited(java.awt.event.MouseEvent evt) {                                                
      
    }  
    
    
     private void btnDodajbtnGroupMouseEntered(java.awt.event.MouseEvent evt) {                                              
        if (evt.getSource() == btnDodaj) {
            btnDodaj.setContentAreaFilled(true);
            btnDodaj.setBackground(new Color(233, 136, 0));
        }
    }                                             

    private void btnDodajbtnGroupMouseExited(java.awt.event.MouseEvent evt) {                                             
          if (evt.getSource() == btnDodaj) {
            btnDodaj.setContentAreaFilled(true);
            btnDodaj.setBackground(new Color(243, 189, 0));
        }
    }     
    
    
    
    
    
    
    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        if(ispravno()){
         
            int sifraPolaznika = vratiPolaznike().size()+1;
            String ime = txtIme.getText();
            String prezime = txtPrezime.getText();
            String imejlI = txtEmail.getText();
            String brTelefonaI = txtBrTelefona.getText();
            
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            Date date = txtDatumRodj.getDate();
            sdf.format(date);
            System.out.println("ISPIS DATUMA: "   +date);
           
            mtk2 = (ModelTabeleKursevi2) tabelaKursevi.getModel();
            List<Kurs> listaKurseva = mtk2.vratiKurseve();
            Polaznik polaznik = new Polaznik(sifraPolaznika, ime, prezime, brTelefonaI, imejlI, date, listaKurseva);
            if (listaKurseva.size() == 0) {
                JOptionPane.showMessageDialog(this, "Morate uneti bar jedan kurs!","GreÅ¡ka!",JOptionPane.ERROR_MESSAGE);
                return;
            }
         
            try {
            if (Kontroler.getInstanca().dodajPolaznika(polaznik)==true) {
                JOptionPane.showMessageDialog(this, "Sistem je zapamtion novog polaznika.", "Uspesno!",JOptionPane.INFORMATION_MESSAGE);
               // mtk.fireTableDataChanged();
                this.dispose();
            }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Sistem ne moÅ¾e da zapamti polaznika.", "GreÅ¡ka!",JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(FrmDodajInstruktora.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnDodajActionPerformed

     private void btnOdustanibtnGroupMouseEntered(java.awt.event.MouseEvent evt) {                                                 
       if (evt.getSource() == btnOdustani) {
            btnOdustani.setContentAreaFilled(true);
            btnOdustani.setBackground(new Color(233, 136, 0));
        }
    }                                                

    private void btnOdustanibtnGroupMouseExited(java.awt.event.MouseEvent evt) {                                                
         if (evt.getSource() == btnOdustani) {
            btnOdustani.setContentAreaFilled(true);
            btnOdustani.setBackground(new Color(243, 189, 0));
        }
    }   
    
    
    
    
    private void btnOdustaniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOdustaniActionPerformed
          int odgovor = JOptionPane.showConfirmDialog(this, "Da li ste sigurni da zelite da odustanete?", "Upozorenje!", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (odgovor == JOptionPane.YES_OPTION){
            this.dispose();
        }
    }//GEN-LAST:event_btnOdustaniActionPerformed

    private void txtBrTelefonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBrTelefonaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBrTelefonaActionPerformed

    private void cbKursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbKursActionPerformed
        Kurs k = (Kurs) cbKurs.getSelectedItem();
        mtk2.dodajKurs(k);
        mtk2.fireTableDataChanged();
    }//GEN-LAST:event_cbKursActionPerformed

    private void txtPrezimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrezimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrezimeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmDodajPolaznika.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmDodajPolaznika.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmDodajPolaznika.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmDodajPolaznika.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmDodajPolaznika().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnOdustani;
    private javax.swing.JComboBox cbKurs;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tabelaKursevi;
    private javax.swing.JTextField txtBrTelefona;
    private com.toedter.calendar.JCalendar txtDatumRodj;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtIme;
    private javax.swing.JTextField txtPrezime;
    // End of variables declaration//GEN-END:variables

    private boolean ispravno() {
         if( txtIme.getText().isEmpty() || txtPrezime.getText().isEmpty() ||
                txtBrTelefona.getText().isEmpty() || txtEmail.getText().isEmpty() || txtDatumRodj.getDate() == null){
            return false;
        }
        return true;
    }

    private boolean dodajPolaznika(Polaznik p) {
        System.out.println("pocelo je da se izvrsava dodajPolaznika");
         try {
            boolean kreiran= Kontroler.getInstanca().dodajPolaznika(p); // ispod ove linije ne ide

            if (kreiran == true) {
             JOptionPane.showMessageDialog(this, "Sistem je zapamtio novog polaznika.", "UspeÅ¡no!",JOptionPane.INFORMATION_MESSAGE);
                return true;
            }
            else{
                System.out.println("kreiran je FALSE");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sistem ne moÅ¾e da zapamti novog polaznika.", "GreÅ¡ka!",JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(FrmDodajPolaznika.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }

    private void popuniCB() {
        try {
            cbKurs.removeAllItems();
            KlijentskiZahtev kz = new KlijentskiZahtev();
            kz.setOperacija(Konstante.VRATI_KURSEVE);
            Komunikacija.getInstance().posaljiZahtev(kz);
            ServerskiOdgovor so = Komunikacija.getInstance().primiOdgovor();
            List<Kurs> kursevi = (List<Kurs>) so.getPodaci();
            
            for (Kurs k : kursevi) {
                cbKurs.addItem(k);
            }
        } catch (IOException | ClassNotFoundException ex) {
            Logger.getLogger(FrmDodajPolaznika.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private List<Polaznik> vratiPolaznike() {
        List<Polaznik> listaPolaznika = new LinkedList<>();
        try {
            listaPolaznika = Kontroler.getInstanca().vratiSvePolaznike();
            
        } catch (Exception ex) {
            Logger.getLogger(FrmDodajKurs.class.getName()).log(Level.SEVERE, null, ex);
        }
        return listaPolaznika;
    }
    }

